#!/usr/local/bin/cbsd
#v10.1.0
MYARG="jname mode"
MYOPTARG="user password"
MYDESC="Launch tty.js in the jail"
ADDHELP="user= set auth user name\n\
password= set auth password name\n"

. ${subr}
. ${system}
. ${tools}
. ${strings}

init $*

. ${jrcconf}
[ $? -eq 1 ] && err 1 "${MAGENTA}No such jail: ${GREEN}${jname}${NORMAL}"
[ ${jid} -eq 0 ] && err 1 "${MAGENTA}Not running: ${GREEN}${jname}${NORMAL}"

my_module_dir="${moduledir}/ttyjs.d/root"

. ${workdir}/imghelper.subr

readconf helpers.conf

# todo
# reload only when changed

run()
{
	local _jpuppet_dir
	local _jpuppet_puppet_src
	local _was_started

	_jpuppet_dir="${jaildatadir}/${cbsd_puppet_jname}-${jaildatapref}/usr/local"
	_jpuppet_puppet_src="${_jpuppet_dir}/bin/puppet"

	[ ! -x "${_jpuppet_puppet_src}" ] && err 1 "${MAGENTA}No such puppet in /usr/local/bin/puppet insinde ${cbsd_puppet_jname}"

	if [ ${jid} -eq 0 ]; then
		jstart jname=${jname}
		_was_started=0
	else
		_was_started=1
	fi

	[ $baserw -eq 1 ] && path="${data}"

	[ -z "${path}" ] && err 1 "No path variable"

	[ ! -d ${moduledir}/puppet.d/puppet_root/modules ] && err 1 "No such ${moduledir}/puppet.d/puppet_root/modules"
	[ ! -d "${path}/usr/local/etc/puppet/modules" ] && mkdir -p ${path}/usr/local/etc/puppet/modules

	# first - mount puppet jail source
	[ ! -d "${path}/tmp/puppet" ] && mkdir -p ${path}/tmp/puppet
	/sbin/mount -t nullfs -o ro ${_jpuppet_dir} ${path}/tmp/puppet
	/sbin/mount -t nullfs -o ro ${moduledir}/puppet.d/puppet_root ${path}/tmp/puppet/etc/puppet

	[ $? -ne 0 ] && err 1 "Error mount ${moduledir}/puppet.d/puppet_root/modules to /usr/local/etc/puppet/modules inside jail"

	generate_manifest > ${path}/tmp/${helpername}.pp
	generate_hieradata > ${path}/tmp/common.yaml

	${ECHO} "${MAGENTA}Puppet in progress: ${GREEN}jexec for /tmp/${helpername}.pp${NORMAL}"
	echo "jexec jname=${jname} /tmp/puppet/etc/puppet/puppetcbsd /tmp/${helpername}.pp"
	jexec jname=${jname} /tmp/puppet/etc/puppet/puppetcbsd /tmp/${helpername}.pp

	/sbin/umount ${path}/tmp/puppet/etc/puppet
	/sbin/umount ${path}/tmp/puppet
	if [ ${_was_started} -eq 0 ]; then
		jstop jname=${jname}
		jcleanup jname=${jname}
	else
		[ -n "${have_restart}" ] && jexec jname=$jname ${have_restart}
	fi
}



case "${mode}" in
	"run")
		run
		;;
	*)
		generate_manifest
		;;
esac
